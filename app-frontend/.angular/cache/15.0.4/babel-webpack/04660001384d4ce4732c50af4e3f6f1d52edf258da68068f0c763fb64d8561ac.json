{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./transactionService\";\nfunction TransactionListComponent_div_0_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const transaction_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", transaction_r2.transactionHistory, \" \");\n  }\n}\nfunction TransactionListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n    i0.ɵɵtemplate(2, TransactionListComponent_div_0_li_2_Template, 2, 1, \"li\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.transactionsWithBalance.transactions);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"The current account Balance is: \", ctx_r0.transactionsWithBalance.accountBalance, \"\");\n  }\n}\nexport class TransactionListComponent {\n  constructor(route, transactionService, cdRef) {\n    this.route = route;\n    this.transactionService = transactionService;\n    this.cdRef = cdRef;\n  }\n  ngOnInit() {\n    this.loadTransactions();\n  }\n  loadTransactions() {\n    this.route.params.subscribe(params => {\n      const accountId = params['accountId'];\n      const amount = params['amount'];\n      const transactionRequest = {\n        accountId: accountId,\n        amount: amount\n      };\n      this.transactionService.addTransaction(transactionRequest).subscribe(response => {\n        this.transactionsWithBalance = response;\n        this.cdRef.detectChanges();\n      }, error => {\n        console.error('Error fetching transactions:', error);\n      });\n    });\n  }\n}\nTransactionListComponent.ɵfac = function TransactionListComponent_Factory(t) {\n  return new (t || TransactionListComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TransactionService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nTransactionListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransactionListComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TransactionListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TransactionListComponent_div_0_Template, 5, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.transactionsWithBalance);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAGIA,0BAAqE;IACnEA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,kEACF;;;;;IALJA,2BAAqC;IAGjCA,6EAEK;IACPA,iBAAK;IAGNA,yBAAG;IAAAA,YAA4E;IAAAA,iBAAI;;;;IANpDA,eAAuC;IAAvCA,qEAAuC;IAMnEA,eAA4E;IAA5EA,4GAA4E;;;ACFhF,OAAM,MAAOC,wBAAwB;EAGnCC,YAAoBC,KAAqB,EACjCC,kBAAsC,EACtCC,KAAwB;IAFZ,UAAK,GAALF,KAAK;IACjB,uBAAkB,GAAlBC,kBAAkB;IAClB,UAAK,GAALC,KAAK;EACT;EAELC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACxB;EAIFA,gBAAgB;IACZ,IAAI,CAACJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACrC,MAAME,SAAS,GAAGF,MAAM,CAAC,WAAW,CAAC;MACrC,MAAMG,MAAM,GAAGH,MAAM,CAAC,QAAQ,CAAC;MAE/B,MAAMI,kBAAkB,GAAG;QAAEF,SAAS,EAAEA,SAAS;QAAEC,MAAM,EAAEA;MAAM,CAAE;MAEnE,IAAI,CAACP,kBAAkB,CAACS,cAAc,CAACD,kBAAkB,CAAC,CAACH,SAAS,CACjEK,QAAQ,IAAI;QACX,IAAI,CAACC,uBAAuB,GAAGD,QAAQ;QACvC,IAAI,CAACT,KAAK,CAACW,aAAa,EAAE;MAC5B,CAAC,EACAC,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,CACF;IACH,CAAC,CAAC;EACJ;;AA/BahB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPrCvB,yEAUM;;;MAVAA,kDAA6B","names":["i0","TransactionListComponent","constructor","route","transactionService","cdRef","ngOnInit","loadTransactions","params","subscribe","accountId","amount","transactionRequest","addTransaction","response","transactionsWithBalance","detectChanges","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\brenda\\Scania\\angular\\frontend-boilerplate-angular\\app-frontend\\src\\app\\transactionList.component.html","C:\\brenda\\Scania\\angular\\frontend-boilerplate-angular\\app-frontend\\src\\app\\transactionList.component.ts"],"sourcesContent":["<div *ngIf=\"transactionsWithBalance\">\r\n\r\n  <ul>\r\n    <li *ngFor=\"let transaction of transactionsWithBalance.transactions\">\r\n      {{ transaction.transactionHistory }}\r\n    </li>\r\n  </ul>\r\n  \r\n  \r\n <p>The current account Balance is: {{ transactionsWithBalance.accountBalance }}</p>\r\n</div>\r\n","import { Component, OnInit,ChangeDetectorRef } from '@angular/core';\r\nimport { TransactionService } from './transactionService';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './transactionList.component.html'\r\n })\r\nexport class TransactionListComponent implements OnInit {\r\n transactionsWithBalance: any;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n  private transactionService: TransactionService,\r\n  private cdRef: ChangeDetectorRef \r\n  ) { }\r\n\r\n ngOnInit(): void {\r\n   this.loadTransactions();\r\n  }\r\n  \r\n  \r\n\r\nloadTransactions(): void {\r\n    this.route.params.subscribe(params => {\r\n    const accountId = params['accountId'];\r\n    const amount = params['amount'];\r\n \r\n    const transactionRequest = { accountId: accountId, amount: amount };\r\n    \r\n    this.transactionService.addTransaction(transactionRequest).subscribe(\r\n      (response) => {\r\n        this.transactionsWithBalance = response;\r\n        this.cdRef.detectChanges();\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching transactions:', error);\r\n      }\r\n    );\r\n  });\r\n}\r\n  \r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}