{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./transactionService\";\nfunction TransactionListComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const transaction_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" Transaction ID: \", transaction_r1.transaction_id, \" | Amount: \", transaction_r1.amount, \" | Account ID: \", transaction_r1.account_id, \" \");\n  }\n}\nexport class TransactionListComponent {\n  constructor(transactionService) {\n    this.transactionService = transactionService;\n    this.transactions = []; // Initialize transactions array\n  }\n\n  ngOnInit() {\n    // Fetch transactions from the service or API\n    this.transactionService.getTransactions().subscribe(transactions => {\n      this.transactions = transactions; // Assign fetched transactions to the component property\n    });\n  }\n}\n\nTransactionListComponent.ɵfac = function TransactionListComponent_Factory(t) {\n  return new (t || TransactionListComponent)(i0.ɵɵdirectiveInject(i1.TransactionService));\n};\nTransactionListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransactionListComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function TransactionListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\");\n      i0.ɵɵtemplate(1, TransactionListComponent_li_1_Template, 2, 3, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.transactions);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;IACEA,0BAA6C;IAC3CA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,kKACF;;;ACGF,OAAM,MAAOC,wBAAwB;EAGnCC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IAFtC,iBAAY,GAAU,EAAE,CAAC,CAAC;EAEoC;;EAE9DC,QAAQ;IACN;IACA,IAAI,CAACD,kBAAkB,CAACE,eAAe,EAAE,CAACC,SAAS,CAACC,YAAY,IAAG;MACjE,IAAI,CAACA,YAAY,GAAGA,YAAY,CAAC,CAAC;IACpC,CAAC,CAAC;EACJ;;;AAVWN,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDNrCZ,0BAAI;MACFA,uEAEK;MACPA,iBAAK;;;MAHyBA,eAAe;MAAfA,0CAAe","names":["i0","TransactionListComponent","constructor","transactionService","ngOnInit","getTransactions","subscribe","transactions","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\brenda\\Scania\\angular\\frontend-boilerplate-angular\\app-frontend\\src\\app\\transactionList.component.html","C:\\brenda\\Scania\\angular\\frontend-boilerplate-angular\\app-frontend\\src\\app\\transactionList.component.ts"],"sourcesContent":["<ul>\r\n  <li *ngFor=\"let transaction of transactions\">\r\n    Transaction ID: {{ transaction.transaction_id }} | Amount: {{ transaction.amount }} | Account ID: {{ transaction.account_id }}\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TransactionService } from './transactionService';\r\n\r\n@Component({\r\n  templateUrl: './transactionList.component.html'\r\n })\r\nexport class TransactionListComponent implements OnInit {\r\n  transactions: any[] = []; // Initialize transactions array\r\n\r\n  constructor(private transactionService: TransactionService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Fetch transactions from the service or API\r\n    this.transactionService.getTransactions().subscribe(transactions => {\r\n      this.transactions = transactions; // Assign fetched transactions to the component property\r\n    });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}