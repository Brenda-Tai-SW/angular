{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./transactionService\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class TransactionFormComponent {\n  constructor(transactionService, router) {\n    this.transactionService = transactionService;\n    this.router = router;\n    this.accountId = '';\n    this.amount = 0;\n  }\n  submitTransaction() {\n    // Create transaction object\n    const transaction = {\n      accountId: this.accountId,\n      amount: this.amount\n    };\n    // Add transaction to SQLite database\n    this.transactionService.addTransaction(transaction).subscribe(() => {\n      //  Redirect to TransactionListComponent after successful submission\n      this.router.navigate(['/transactions']);\n    });\n  }\n}\nTransactionFormComponent.ɵfac = function TransactionFormComponent_Factory(t) {\n  return new (t || TransactionFormComponent)(i0.ɵɵdirectiveInject(i1.TransactionService), i0.ɵɵdirectiveInject(i2.Router));\n};\nTransactionFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransactionFormComponent,\n  selectors: [[\"app-root\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"transactionForm\", \"ngForm\"], [\"for\", \"accountId\"], [\"type\", \"text\", \"id\", \"accountId\", \"name\", \"accountId\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function TransactionFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function TransactionFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitTransaction();\n      });\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Account ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function TransactionFormComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.accountId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Amount:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function TransactionFormComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.amount = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 6);\n      i0.ɵɵtext(9, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.accountId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.amount);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,wBAAwB;EAInCC,YAAoBC,kBAAsC,EAAUC,MAAc;IAA9D,uBAAkB,GAAlBD,kBAAkB;IAA8B,WAAM,GAANC,MAAM;IACxE,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,MAAM,GAAG,CAAC;EACjB;EAEAC,iBAAiB;IACf;IACD,MAAMC,WAAW,GAAG;MAAEH,SAAS,EAAE,IAAI,CAACA,SAAS;MAAEC,MAAM,EAAE,IAAI,CAACA;IAAM,CAAE;IAErE;IACA,IAAI,CAACH,kBAAkB,CAACM,cAAc,CAACD,WAAW,CAAC,CAACE,SAAS,CAAC,MAAK;MACnE;MACC,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;IACxC,CAAC,CAAC;EACJ;;AAlBWV,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCNrCC,kCAAiE;MAA3DA;QAAA,OAAYC,uBAAmB;MAAA,EAAC;MACpCD,gCAAuB;MAAAA,2BAAW;MAAAA,iBAAQ;MAC1CA,gCAAoF;MAAxBA;QAAA;MAAA,EAAuB;MAAnFA,iBAAoF;MAEpFA,gCAAoB;MAAAA,uBAAO;MAAAA,iBAAQ;MACnCA,gCAA6E;MAArBA;QAAA;MAAA,EAAoB;MAA5EA,iBAA6E;MAE7EA,iCAA2D;MAAAA,sBAAM;MAAAA,iBAAS;;;;MALdA,eAAuB;MAAvBA,uCAAuB;MAG3BA,eAAoB;MAApBA,oCAAoB;MAEtDA,eAAoC;MAApCA,sCAAoC","names":["TransactionFormComponent","constructor","transactionService","router","accountId","amount","submitTransaction","transaction","addTransaction","subscribe","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\brenda\\Scania\\angular\\frontend-boilerplate-angular\\app-frontend\\src\\app\\transactionForm.component.ts","C:\\brenda\\Scania\\angular\\frontend-boilerplate-angular\\app-frontend\\src\\app\\transactionForm.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TransactionService } from './transactionService'; // Import the transaction service\r\n\r\n@Component({\r\n   selector: 'app-root',\r\n  templateUrl: './transactionForm.component.html',\r\n})\r\nexport class TransactionFormComponent {\r\n  accountId: string;\r\n  amount: number;\r\n\r\n  constructor(private transactionService: TransactionService, private router: Router) {\r\n    this.accountId = '';\r\n    this.amount = 0;\r\n  }\r\n\r\n  submitTransaction(): void {\r\n    // Create transaction object\r\n   const transaction = { accountId: this.accountId, amount: this.amount };\r\n\r\n    // Add transaction to SQLite database\r\n    this.transactionService.addTransaction(transaction).subscribe(() => {\r\n    //  Redirect to TransactionListComponent after successful submission\r\n     this.router.navigate(['/transactions']);\r\n    });\r\n  }\r\n}\r\n","\r\n\r\n<form (ngSubmit)=\"submitTransaction()\" #transactionForm=\"ngForm\">\r\n  <label for=\"accountId\">Account ID:</label>\r\n  <input type=\"text\" id=\"accountId\" name=\"accountId\" required [(ngModel)]=\"accountId\">\r\n  \r\n  <label for=\"amount\">Amount:</label>\r\n  <input type=\"number\" id=\"amount\" name=\"amount\" required [(ngModel)]=\"amount\">\r\n  \r\n  <button type=\"submit\" [disabled]=\"transactionForm.invalid\">Submit</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}