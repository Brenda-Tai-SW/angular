{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./transactionService\";\nfunction TransactionListComponent_div_0_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const transaction_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", transaction_r2.transactionHistory, \" \");\n  }\n}\nfunction TransactionListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n    i0.ɵɵtemplate(2, TransactionListComponent_div_0_li_2_Template, 2, 1, \"li\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.transactionsWithBalance.transactions);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"The current account Balance is: \", ctx_r0.transactionsWithBalance.accountBalance, \"\");\n  }\n}\nexport class TransactionListComponent {\n  constructor(route, transactionService) {\n    this.route = route;\n    this.transactionService = transactionService;\n  }\n  ngOnInit() {\n    this.loadTransactions();\n  }\n  loadTransactions() {\n    this.route.queryParams.subscribe(params => {\n      const accountId = params['accountId'];\n      const amount = params['amount'];\n      const transactionRequest = {\n        accountId: accountId,\n        amount: this.amount\n      };\n    });\n    this.transactionService.addTransaction().subscribe(response => {\n      this.transactionsWithBalance = response;\n    }, error => {\n      console.error('Error fetching transactions:', error);\n    });\n  }\n}\nTransactionListComponent.ɵfac = function TransactionListComponent_Factory(t) {\n  return new (t || TransactionListComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TransactionService));\n};\nTransactionListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransactionListComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TransactionListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TransactionListComponent_div_0_Template, 5, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.transactionsWithBalance);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAGIA,0BAAqE;IACnEA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,kEACF;;;;;IALJA,2BAAqC;IAGjCA,6EAEK;IACPA,iBAAK;IAGNA,yBAAG;IAAAA,YAA4E;IAAAA,iBAAI;;;;IANpDA,eAAuC;IAAvCA,qEAAuC;IAMnEA,eAA4E;IAA5EA,4GAA4E;;;ACFhF,OAAM,MAAOC,wBAAwB;EAGnCC,YAAoBC,KAAqB,EAASC,kBAAsC;IAApE,UAAK,GAALD,KAAK;IAAyB,uBAAkB,GAAlBC,kBAAkB;EAAwB;EAE7FC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACxB;EAGDA,gBAAgB;IAEf,IAAI,CAACH,KAAK,CAACI,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACxC,MAAMC,SAAS,GAAGD,MAAM,CAAC,WAAW,CAAC;MACrC,MAAME,MAAM,GAAGF,MAAM,CAAC,QAAQ,CAAC;MAC/B,MAAMG,kBAAkB,GAAG;QAAEF,SAAS,EAAEA,SAAS;QAAEC,MAAM,EAAE,IAAI,CAACA;MAAM,CAAE;IAC1E,CAAC,CAAC;IAEA,IAAI,CAACP,kBAAkB,CAACS,cAAc,EAAE,CAACL,SAAS,CAC/CM,QAAQ,IAAI;MACX,IAAI,CAACC,uBAAuB,GAAGD,QAAQ;IACzC,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACH;;AA1BWf,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPrCtB,yEAUM;;;MAVAA,kDAA6B","names":["i0","TransactionListComponent","constructor","route","transactionService","ngOnInit","loadTransactions","queryParams","subscribe","params","accountId","amount","transactionRequest","addTransaction","response","transactionsWithBalance","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\brenda\\Scania\\angular\\frontend-boilerplate-angular\\app-frontend\\src\\app\\transactionList.component.html","C:\\brenda\\Scania\\angular\\frontend-boilerplate-angular\\app-frontend\\src\\app\\transactionList.component.ts"],"sourcesContent":["<div *ngIf=\"transactionsWithBalance\">\r\n\r\n  <ul>\r\n    <li *ngFor=\"let transaction of transactionsWithBalance.transactions\">\r\n      {{ transaction.transactionHistory }}\r\n    </li>\r\n  </ul>\r\n  \r\n  \r\n <p>The current account Balance is: {{ transactionsWithBalance.accountBalance }}</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TransactionService } from './transactionService';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './transactionList.component.html'\r\n })\r\nexport class TransactionListComponent implements OnInit {\r\n transactionsWithBalance: any;\r\n\r\n  constructor(private route: ActivatedRoute,private transactionService: TransactionService) { }\r\n\r\n ngOnInit(): void {\r\n   this.loadTransactions();\r\n  }\r\n  \r\n  \r\n loadTransactions(): void {\r\n \r\n  this.route.queryParams.subscribe(params => {\r\n    const accountId = params['accountId'];\r\n    const amount = params['amount'];\r\n    const transactionRequest = { accountId: accountId, amount: this.amount };\r\n  });\r\n \r\n    this.transactionService.addTransaction().subscribe(\r\n      (response) => {\r\n        this.transactionsWithBalance = response;\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching transactions:', error);\r\n      }\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}