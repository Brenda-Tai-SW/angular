{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./transactionService\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction TransactionFormComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Account ID is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransactionFormComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Invalid UUID format \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransactionFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Amount is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransactionFormComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Invalid integer format \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TransactionFormComponent {\n  constructor(transactionService, router) {\n    this.transactionService = transactionService;\n    this.router = router;\n    this.accountId = 111;\n    this.amount = 0;\n  }\n  submitTransaction() {\n    // Create transactionRequest object\n    const transactionRequest = {\n      accountId: this.accountId,\n      amount: this.amount\n    };\n    console.log('Navigation URL:', ['/transactions', transactionRequest.accountId, transactionRequest.amount]);\n    // Add transaction to SQLite database\n    this.transactionService.addTransaction(transactionRequest).subscribe(() => {\n      //  Redirect to TransactionListComponent after successful submission\n      this.router.navigate(['/transactions', transactionRequest.accountId, transactionRequest.amount]);\n    });\n  }\n}\nTransactionFormComponent.ɵfac = function TransactionFormComponent_Factory(t) {\n  return new (t || TransactionFormComponent)(i0.ɵɵdirectiveInject(i1.TransactionService), i0.ɵɵdirectiveInject(i2.Router));\n};\nTransactionFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransactionFormComponent,\n  selectors: [[\"app-root\"]],\n  decls: 14,\n  vars: 7,\n  consts: [[3, \"ngSubmit\"], [\"transactionForm\", \"ngForm\"], [\"for\", \"accountId\"], [\"type\", \"text\", \"id\", \"accountId\", \"name\", \"accountId\", \"required\", \"\", \"pattern\", \"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"error-message\"]],\n  template: function TransactionFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function TransactionFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitTransaction();\n      });\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Account ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function TransactionFormComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.accountId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, TransactionFormComponent_div_5_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(6, TransactionFormComponent_div_6_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementStart(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Amount:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function TransactionFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.amount = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, TransactionFormComponent_div_10_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(11, TransactionFormComponent_div_11_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵtext(13, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.accountId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (_r0.controls[\"accountId\"].errors == null ? null : _r0.controls[\"accountId\"].errors.required) && (_r0.controls[\"accountId\"].dirty || _r0.controls[\"accountId\"].touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (_r0.controls[\"accountId\"].errors == null ? null : _r0.controls[\"accountId\"].errors.pattern) && (_r0.controls[\"accountId\"].dirty || _r0.controls[\"accountId\"].touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.amount);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (_r0.controls[\"amount\"].errors == null ? null : _r0.controls[\"amount\"].errors.required) && (_r0.controls[\"amount\"].dirty || _r0.controls[\"amount\"].touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (_r0.controls[\"amount\"].errors == null ? null : _r0.controls[\"amount\"].errors.step) && (_r0.controls[\"amount\"].dirty || _r0.controls[\"amount\"].touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n  encapsulation: 2\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}